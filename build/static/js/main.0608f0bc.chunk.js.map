{"version":3,"sources":["types/index.ts","components/Experience/AddExperience.tsx","components/Experience/EditExperience.tsx","components/Experience/ListExperience.tsx","Pages/Experience.tsx","components/Profile/AddProfile.tsx","components/Profile/EditProfile.tsx","components/Profile/ListProfile.tsx","Pages/Profile.tsx","app.tsx","index.tsx"],"names":["PageEnum","PageEnum1","AddExperience","props","useState","position","setPosition","company","setCompany","jobDescription","setJobDescription","startDate","setStartDate","endDate","setEndDate","images","setImages","ceklis","setCeklis","onBackBtnClickHnd","onSubmitClickHnd","className","onSubmit","e","preventDefault","data","id","Date","toJSON","toString","required","type","onChange","target","value","files","fileRef","fileType","console","log","reader","FileReader","readAsBinaryString","onload","ev","btoa","result","convertFile","style","backgroundColor","disabled","EditExperience","onUpdateClickHnd","onEndDateChange","updatedData","ListExperience","list","onDeleteClickHnd","onEdit","map","experience","src","alt","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Experience","ExperienceList","setExperienceList","shownPage","setShownPage","dataToEdit","setDataToEdit","useEffect","listInString","window","localStorage","getItem","_setExperienceList","JSON","parse","showListPage","setItem","stringify","add","indexToDelete","indexOf","tempList","splice","edit","filteredData","filter","x","indexOfRecord","tempData","AddProfile","name","setName","old","setOld","profile","setProfile","EditProfile","ListProfile","Profile","profileList","setProfileList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0608f0bc.chunk.js","sourcesContent":["export interface DATAPROFILE {\n    id: string;\n    name: string;\n    old: string;\n    profile: string;\n}\n\nexport interface DATAEXPERIENCE {\n    id: string;\n    position: string;\n    company: string;\n    jobDescription: string;\n    startDate: string;\n    endDate: string;\n    images: string;\n}\n\n\nexport enum PageEnum {\n    list,\n    add,\n    edit,\n}\n\nexport enum PageEnum1 {\n    list,\n    add,\n    edit,\n}","\nimport { useState } from \"react\";\nimport { DATAEXPERIENCE } from \"../../types\";\n\ntype Props = {\n    onBackBtnClickHnd: () => void;\n    onSubmitClickHnd: (data: DATAEXPERIENCE) => void;\n};\n\nconst AddExperience = (props: Props) => {\n    const [position, setPosition] = useState(\"\");\n    const [company, setCompany] = useState(\"\");\n    const [jobDescription, setJobDescription] = useState(\"\");\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    const [images, setImages] = useState(\"\");\n    const [ceklis, setCeklis] = useState(false);\n\n    const { onBackBtnClickHnd, onSubmitClickHnd } = props;\n    function formSubmit(e: any) {\n        e.preventDefault();\n        const data: DATAEXPERIENCE = {\n            id: new Date().toJSON().toString(),\n            position: position,\n            company: company,\n            jobDescription: jobDescription,\n            startDate: startDate,\n            endDate: endDate,\n            images: images,\n        };\n        onSubmitClickHnd(data);\n        onBackBtnClickHnd();\n    }\n\n    // The Magic all happens here.\n    function convertFile(files: FileList | null) {\n        if (files) {\n            const fileRef = files[0] || \"\"\n            const fileType: string = fileRef.type || \"\"\n            console.log(\"This file upload is of type:\", fileType)\n            const reader = new FileReader()\n            reader.readAsBinaryString(fileRef)\n            reader.onload = (ev: any) => {\n                // convert it to base64\n                setImages(`data:${fileType};base64,${btoa(ev.target.result)}`)\n            }\n        }\n    }\n\n    return (\n        <div className=\"form-container\">\n            <form onSubmit={formSubmit} className=\"block\">\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Company\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            required\n                            type=\"text\" onChange={(e) => setCompany(e.target.value)}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Company Logo\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"file\" onChange={(e) => convertFile(e.target.files)}\n                            required\n                            style={{ backgroundColor: \"white\" }}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Position\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            required\n                            onChange={(e) => setPosition(e.target.value)}\n                            type=\"text\"\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Start Date\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            required\n                            type=\"date\" onChange={(e) => setStartDate(e.target.value)}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        End Date\n                    </p>\n                    <div className=\"w-full\">\n                        {ceklis === true ? (\n                            <input\n                                disabled\n                                type=\"date\" onChange={(e) => setEndDate(e.target.value)}\n                                className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                            />\n                        ) : ceklis === false ? (\n                            <input\n                                required\n                                type=\"date\" onChange={(e) => setEndDate(e.target.value)}\n                                className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                            />\n                        ) : null}\n                        <input\n                            type=\"checkbox\"\n                            // value={props.highlight}\n                            onChange={() => setCeklis(!ceklis)}\n                            className=\"bg-white mr-4 w-[28px] h-[28px] border border-gray-300 rounded-lg px-2\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Deskripsi\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            required\n                            type=\"text\" onChange={(e) => setJobDescription(e.target.value)}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <button className=\"mt-5 cursor-pointer text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"> Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddExperience;\n","import { useState } from \"react\";\nimport { DATAEXPERIENCE } from \"../../types\";\n\ntype Props = {\n    data: DATAEXPERIENCE;\n    onBackBtnClickHnd: () => void;\n    onUpdateClickHnd: (data: DATAEXPERIENCE) => void;\n};\n\nconst EditExperience = (props: Props) => {\n    const { data, onBackBtnClickHnd, onUpdateClickHnd } = props;\n\n    const [position, setPosition] = useState(data.position);\n    const [company, setCompany] = useState(data.company);\n    const [jobDescription, setJobDescription] = useState(data.jobDescription);\n    const [startDate, setStartDate] = useState(data.startDate);\n    const [endDate, setEndDate] = useState(data.endDate);\n    const [images, setImages] = useState(data.images);\n\n    const [ceklis, setCeklis] = useState(false);\n\n    const onPositionChange = (e: any) => {\n        setPosition(e.target.value);\n    };\n    const onCompanyChange = (e: any) => {\n        setCompany(e.target.value);\n    };\n    const onJobDescriptionChange = (e: any) => {\n        setJobDescription(e.target.value);\n    };\n    const onStartDateChange = (e: any) => {\n        setStartDate(e.target.value);\n    };\n    const onEndDateChange = (e: any) => {\n        setEndDate(e.target.value);\n    };\n    const onImageChange = (e: any) => {\n        convertFile(e.target.files);\n    };\n\n    const onSubmitBtnClickHnd = (e: any) => {\n        e.preventDefault();\n        const updatedData: DATAEXPERIENCE = {\n            id: data.id,\n            position: position,\n            company: company,\n            jobDescription: jobDescription,\n            startDate: startDate,\n            endDate: endDate,\n            images: images,\n        };\n        onUpdateClickHnd(updatedData);\n        onBackBtnClickHnd();\n    };\n\n    function convertFile(files: FileList | null) {\n        if (files) {\n            const fileRef = files[0] || \"\"\n            const fileType: string = fileRef.type || \"\"\n            console.log(\"This file upload is of type:\", fileType)\n            const reader = new FileReader()\n            reader.readAsBinaryString(fileRef)\n            reader.onload = (ev: any) => {\n                // convert it to base64\n                setImages(`data:${fileType};base64,${btoa(ev.target.result)}`)\n            }\n        }\n    }\n    return (\n        <div className=\"form-container\">\n            <form onSubmit={onSubmitBtnClickHnd} className=\"block\">\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Company\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"text\"\n                            value={company}\n                            onChange={onCompanyChange}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Company Logo\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"file\"\n                            onChange={onImageChange}\n                            style={{ backgroundColor: \"white\" }}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Position\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            onChange={onPositionChange}\n                            value={position}\n                            type=\"text\"\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Start Date\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"date\"\n                            value={startDate}\n                            onChange={onStartDateChange}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        End Date\n                    </p>\n                    <div className=\"w-full\">\n                        {ceklis === true ? (\n                            <input\n                                type=\"text\"\n                                disabled\n                                value=\"0\"\n                                onChange={onEndDateChange}\n                                className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                            />\n                        ) : ceklis === false ? (\n                            <input\n                                type=\"date\"\n                                required\n                                value={endDate}\n                                onChange={onEndDateChange}\n                                className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                            />\n                        ) : null}\n                        <input\n                            type=\"checkbox\"\n                            // value={props.highlight}\n                            onChange={() => setCeklis(!ceklis)}\n                            className=\"bg-white mr-4 w-[28px] h-[28px] border border-gray-300 rounded-lg px-2\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Deskripsi\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"text\"\n                            value={jobDescription}\n                            onChange={onJobDescriptionChange}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <button className=\"mt-5 cursor-pointer text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"> Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default EditExperience;\n","import { DATAEXPERIENCE } from \"../../types\";\n\ntype Props = {\n    list: DATAEXPERIENCE[];\n    onDeleteClickHnd: (data: DATAEXPERIENCE) => void;\n    onEdit: (data: DATAEXPERIENCE) => void;\n};\n\nconst ListExperience = (props: Props) => {\n    const { list, onDeleteClickHnd, onEdit } = props;\n    console.log(list, \"haha\")\n    // const viewEmployee = (data: DATAEXPERIENCE) => {\n    //     setDataToShow(data);\n    //     setShowModal(true);\n    // };\n\n    return (\n        <div>\n            <div className=\"flex flex-col gap-6 mt-6\">\n                {list.map((experience) => (\n                    <div\n                        key={experience.id}\n                        className=\"p-6 flex bg-whites gap-6 bg-gray-700 rounded-xl border-2 border-gray-600 hover:translate-x-1 hover:translate-y-1 transition-all\"\n                    >\n                        <div className=\"self- min-w-fit\">\n                            {experience.images ? (\n                                <img\n                                    className=\"h-28 w-28 rounded-md border-blue-500\"\n                                    src={experience.images}\n                                    alt=\"\"\n                                />\n                            ) : (\n                                <img\n                                    className=\"h-28 w-28 rounded-md border-blue-500\"\n                                    src=\"/vercel.svg\"\n                                    alt=\"\"\n                                />\n                            )}\n                        </div>\n                        <div className=\"w-full\">\n                            <p className=\"text-xl font-bold \">\n                                {experience.company}\n                            </p>\n                            <p className=\"text-xl font-medium\">\n                                {experience.position}\n                            </p>\n                            <p className=\"text-md text-gray-400\">\n                                {experience.startDate} -\n                                {experience.endDate === \"\" ? (\n                                    \"present\"\n                                ) : experience.endDate\n                                }\n                            </p>\n                            <p className=\"text-md\">\n                                {experience.jobDescription}\n                            </p>\n                            <div className=\"flex justify-end\">\n                                <div\n                                    onClick={() => onEdit(experience)}\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        className=\"h-6 w-6 mr-4 cursor-pointer \"\n                                        fill=\"none\"\n                                        viewBox=\"0 0 24 24\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth=\"2\"\n                                    >\n                                        <path\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                                        />\n                                    </svg>\n                                </div>\n                                <div\n                                    onClick={() => onDeleteClickHnd(experience)}\n\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        className=\"h-6 w-6 cursor-pointer\"\n                                        fill=\"none\"\n                                        viewBox=\"0 0 24 24\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth=\"2\"\n                                    >\n                                        <path\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                                        />\n                                    </svg>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ListExperience;\n","import { useEffect, useState } from \"react\";\nimport AddExperience from \"../components/Experience/AddExperience\";\nimport EditExperience from \"../components/Experience/EditExperience\";\n// import EditExperience from \"../components/Experience/EditExperience\";\nimport ListExperience from \"../components/Experience/ListExperience\";\nimport { DATAEXPERIENCE, PageEnum } from \"../types\";\n\nconst Experience = () => {\n    const [ExperienceList, setExperienceList] = useState([] as DATAEXPERIENCE[]);\n    const [shownPage, setShownPage] = useState(PageEnum.list);\n    const [dataToEdit, setDataToEdit] = useState({} as DATAEXPERIENCE);\n\n    useEffect(() => {\n        const listInString = window.localStorage.getItem(\"ExperienceList\");\n        if (listInString) {\n            _setExperienceList(JSON.parse(listInString));\n        }\n    }, []);\n\n    const onAddEmployeeClickHnd = () => {\n        setShownPage(PageEnum.add);\n    };\n\n    const showListPage = () => {\n        setShownPage(PageEnum.list);\n    };\n\n    const _setExperienceList = (list: DATAEXPERIENCE[]) => {\n        setExperienceList(list);\n        window.localStorage.setItem(\"ExperienceList\", JSON.stringify(list));\n    };\n\n    const addEmployee = (data: DATAEXPERIENCE) => {\n        _setExperienceList([...ExperienceList, data]);\n    };\n\n    const deleteEmployee = (data: DATAEXPERIENCE) => {\n        // To Index from array i,e ExperienceList\n        // Splice that\n        // Update new record\n\n        const indexToDelete = ExperienceList.indexOf(data);\n        const tempList = [...ExperienceList];\n\n        tempList.splice(indexToDelete, 1);\n        _setExperienceList(tempList);\n    };\n\n    const editEmployeeData = (data: DATAEXPERIENCE) => {\n        setShownPage(PageEnum.edit);\n        setDataToEdit(data);\n    };\n\n    const updateData = (data: DATAEXPERIENCE) => {\n        const filteredData = ExperienceList.filter((x) => x.id === data.id)[0];\n        const indexOfRecord = ExperienceList.indexOf(filteredData);\n        const tempData = [...ExperienceList];\n        tempData[indexOfRecord] = data;\n        _setExperienceList(tempData);\n    };\n\n    return (\n        <>\n            <section className=\"section-content\">\n                {shownPage === PageEnum.list && (\n                    <div className=\"justify-end\">\n                        <input\n                            type=\"button\"\n                            value=\"Add Experience\"\n                            onClick={onAddEmployeeClickHnd}\n                            className=\"mt-5 cursor-pointer text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"\n\n                        />\n                        <ListExperience\n                            list={ExperienceList}\n                            onDeleteClickHnd={deleteEmployee}\n                            onEdit={editEmployeeData}\n                        />\n                    </div>\n                )}\n\n                {shownPage === PageEnum.add && (\n                    <AddExperience\n                        onBackBtnClickHnd={showListPage}\n                        onSubmitClickHnd={addEmployee}\n                    />\n                )}\n\n                {shownPage === PageEnum.edit && (\n                    <EditExperience\n                        data={dataToEdit}\n                        onBackBtnClickHnd={showListPage}\n                        onUpdateClickHnd={updateData}\n                    />\n                )}\n            </section>\n        </>\n    );\n};\n\nexport default Experience;\n","\nimport { useState } from \"react\";\nimport { DATAPROFILE } from \"../../types\";\n\ntype Props = {\n    onBackBtnClickHnd: () => void;\n    onSubmitClickHnd: (data: DATAPROFILE) => void;\n};\n\nconst AddProfile = (props: Props) => {\n    const [name, setName] = useState(\"\");\n    const [old, setOld] = useState(\"\");\n    const [profile, setProfile] = useState(\"\");\n\n    const { onBackBtnClickHnd, onSubmitClickHnd } = props;\n    function formSubmit(e: any) {\n        e.preventDefault();\n        const data: DATAPROFILE = {\n            id: new Date().toJSON().toString(),\n            name: name,\n            old: old,\n            profile: profile,\n        };\n        onSubmitClickHnd(data);\n        onBackBtnClickHnd();\n    }\n\n    // The Magic all happens here.\n    function convertFile(files: FileList | null) {\n        if (files) {\n            const fileRef = files[0] || \"\"\n            const fileType: string = fileRef.type || \"\"\n            console.log(\"This file upload is of type:\", fileType)\n            const reader = new FileReader()\n            reader.readAsBinaryString(fileRef)\n            reader.onload = (ev: any) => {\n                // convert it to base64\n                setProfile(`data:${fileType};base64,${btoa(ev.target.result)}`)\n            }\n        }\n    }\n\n    return (\n        <div className=\"form-container\">\n            <form onSubmit={formSubmit} className=\"block\">\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Company\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"text\" onChange={(e) => setName(e.target.value)}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Company Logo\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"file\" onChange={(e) => convertFile(e.target.files)}\n                            style={{ backgroundColor: \"white\" }}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Position\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            onChange={(e) => setOld(e.target.value)}\n                            type=\"text\"\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <button className=\"mt-5 text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"> Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddProfile;\n","import { useState } from \"react\";\nimport { DATAPROFILE } from \"../../types\";\n\ntype Props = {\n    data: DATAPROFILE;\n    onBackBtnClickHnd: () => void;\n    onUpdateClickHnd: (data: DATAPROFILE) => void;\n};\n\nconst EditProfile = (props: Props) => {\n    const { data, onBackBtnClickHnd, onUpdateClickHnd } = props;\n\n    const [name, setName] = useState(data.name);\n    const [old, setOld] = useState(data.old);\n    const [profile, setProfile] = useState(data.profile);\n\n    const onNameChange = (e: any) => {\n        setName(e.target.value);\n    };\n    const onOldChange = (e: any) => {\n        setOld(e.target.value);\n    };\n    const onProfileChange = (e: any) => {\n        convertFile(e.target.files);\n    };\n\n    const onSubmitBtnClickHnd = (e: any) => {\n        e.preventDefault();\n        const updatedData: DATAPROFILE = {\n            id: data.id,\n            name: name,\n            old: old,\n            profile: profile,\n        };\n        onUpdateClickHnd(updatedData);\n        onBackBtnClickHnd();\n    };\n\n    function convertFile(files: FileList | null) {\n        if (files) {\n            const fileRef = files[0] || \"\"\n            const fileType: string = fileRef.type || \"\"\n            console.log(\"This file upload is of type:\", fileType)\n            const reader = new FileReader()\n            reader.readAsBinaryString(fileRef)\n            reader.onload = (ev: any) => {\n                // convert it to base64\n                setProfile(`data:${fileType};base64,${btoa(ev.target.result)}`)\n            }\n        }\n    }\n    return (\n        <div className=\"form-container\">\n            <form onSubmit={onSubmitBtnClickHnd} className=\"block\">\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Nama\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"text\"\n                            required\n                            value={name}\n                            onChange={onNameChange}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Foto Profile\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            type=\"file\"\n                            required\n                            onChange={onProfileChange}\n                            style={{ backgroundColor: \"white\" }}\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <div className=\"mt-4\">\n                    <p className=\"self-center text-lg font-semibold\">\n                        Umur\n                    </p>\n                    <div className=\"w-full\">\n                        <input\n                            onChange={onOldChange}\n                            value={old}\n                            required\n                            type=\"text\"\n                            className=\"shadow appearance-none bg-gray-600 border-2 border-gray-500 rounded w-full py-2 px-3 text-white leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                </div>\n                <button className=\"mt-5 text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"> Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default EditProfile;\n","import { DATAPROFILE } from \"../../types\";\n\ntype Props = {\n    list: DATAPROFILE[];\n    onDeleteClickHnd: (data: DATAPROFILE) => void;\n    onEdit: (data: DATAPROFILE) => void;\n};\n\nconst ListProfile = (props: Props) => {\n    const { list, onEdit } = props;\n    console.log(list, \"haha\")\n    // const [showModal, setShowModal] = useState(false);\n    // const [dataToShow, setDataToShow] = useState(null as DATAPROFILE | null);\n\n    // const viewEmployee = (data: DATAPROFILE) => {\n    //     setDataToShow(data);\n    //     setShowModal(true);\n    // };\n\n    // const onCloseModal = () => setShowModal(false);\n\n    return (\n        <div>\n            {/* {showModal && dataToShow !== null && (\n                <ModalExperience onClose={onCloseModal} data={dataToShow} />\n            )} */}\n            <div className=\"flex gap-6 mt-6\">\n                {list.map((profile) => (\n                    <>\n                        <div>\n                            <img\n                                className=\"h-52 w-52 rounded-full border-8 border-gray-600 drop-shadow-2xl cursor-pointer hover:scale-105 transition-all\"\n                                src={profile.profile}\n                                alt=\"\"\n                            />\n                        </div>\n                        <div className=\"self-center text-center\">\n                            <div className=\"flex\">\n                                <p\n                                    className=\"text-5xl font-bold mb-3\"\n                                >\n                                    {profile.name}\n                                </p>\n                            </div>\n                            <div className=\"flex\">\n\n                                <p\n                                    className=\"text-lg font-semibold\"\n                                >\n                                    {profile.old}\n                                </p>\n                            </div>\n                            <div className=\"flex \">\n                                <div\n                                    onClick={() => onEdit(profile)}\n                                    className=\"mt-5 cursor-pointer text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"\n                                >\n                                    <p>Edit Profile</p>\n                                </div>\n                            </div>\n                            {/* <div className=\"flex \">\n                                <div\n                                    onClick={() => onDeleteClickHnd(profile)}\n                                    className=\"mt-5 cursor-pointer text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"\n                                >\n                                    <p>delete Profile</p>\n                                </div>\n                            </div> */}\n                        </div>\n\n                    </>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ListProfile;\n","import { useEffect, useState } from \"react\";\nimport AddProfile from \"../components/Profile/AddProfile\";\nimport EditProfile from \"../components/Profile/EditProfile\";\nimport ListProfile from \"../components/Profile/ListProfile\";\nimport { DATAPROFILE, PageEnum1 } from \"../types\";\n\nconst Profile = () => {\n    const [profileList, setProfileList] = useState([] as DATAPROFILE[]);\n    const [shownPage, setShownPage] = useState(PageEnum1.list);\n    const [dataToEdit, setDataToEdit] = useState({} as DATAPROFILE);\n\n    useEffect(() => {\n        const listInString = window.localStorage.getItem(\"ExperienceList\");\n        if (listInString) {\n            _setExperienceList(JSON.parse(listInString));\n        }\n    }, []);\n\n    // const onAddEmployeeClickHnd = () => {\n    //     setShownPage(PageEnum1.add);\n    // };\n\n    const showListPage = () => {\n        setShownPage(PageEnum1.list);\n    };\n\n    const _setExperienceList = (list: DATAPROFILE[]) => {\n        setProfileList(list);\n        window.localStorage.setItem(\"ExperienceList\", JSON.stringify(list));\n    };\n\n    const addEmployee = (data: DATAPROFILE) => {\n        _setExperienceList([...profileList, data]);\n    };\n\n    const deleteEmployee = (data: DATAPROFILE) => {\n        const indexToDelete = profileList.indexOf(data);\n        const tempList = [...profileList];\n\n        tempList.splice(indexToDelete, 1);\n        _setExperienceList(tempList);\n    };\n\n    const editEmployeeData = (data: DATAPROFILE) => {\n        setShownPage(PageEnum1.edit);\n        setDataToEdit(data);\n    };\n\n    const updateData = (data: DATAPROFILE) => {\n        const filteredData = profileList.filter((x) => x.id === data.id)[0];\n        const indexOfRecord = profileList.indexOf(filteredData);\n        const tempData = [...profileList];\n        tempData[indexOfRecord] = data;\n        _setExperienceList(tempData);\n    };\n\n    return (\n        <>\n            <section className=\"section-content\">\n                {shownPage === PageEnum1.list && (\n                    <div className=\"justify-end\">\n                        {/* <input\n                            type=\"button\"\n                            value=\"Add Experience\"\n                            onClick={onAddEmployeeClickHnd}\n                            className=\"mt-5 cursor-pointer text-white bg-blak focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 font-semibold border\"\n\n                        /> */}\n                        <ListProfile\n                            list={profileList}\n                            onDeleteClickHnd={deleteEmployee}\n                            onEdit={editEmployeeData}\n                        />\n                    </div>\n                )}\n\n                {shownPage === PageEnum1.add && (\n                    <AddProfile\n                        onBackBtnClickHnd={showListPage}\n                        onSubmitClickHnd={addEmployee}\n                    />\n                )}\n\n                {shownPage === PageEnum1.edit && (\n                    <EditProfile\n                        data={dataToEdit}\n                        onBackBtnClickHnd={showListPage}\n                        onUpdateClickHnd={updateData}\n                    />\n                )}\n            </section>\n        </>\n    );\n};\n\nexport default Profile;\n","import Experience from './Pages/Experience';\nimport Profile from './Pages/Profile';\n\nconst App = () => {\n\n  return (\n    <div className=\"font-sans bg-eggWhite h-full box-border\">\n      <div className=\"container mx-auto\">\n        <div className=\"text-center text-4xl pt-5 font-bold\">Curriculum Vitae</div>\n        <div\n          className=\"bg-gradient-to-r from-lightningYellow via-treePoppy\n       to-goldenTainoi h-full shadow-lg mt-8 rounded-lg pt-12 p-12\"\n        >\n          <Profile />\n          <Experience />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './app.css';\nimport App from './app';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}